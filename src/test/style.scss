@import "reset";

:root {
  --color-primaryColor: #4DB6AC;
  --textColor-primaryColor: #000000;
  --color-light-primaryColor: #B2DFDB;
  --textColor-light-primaryColor: #000000;
  --color-dark-primaryColor: #009688;
  --textColor-dark-primaryColor: #000000;
  --color-grayColor: #CFD8DC;
  --textColor-grayColor: #000000;
  --color-light-grayColor: #ffffff;
  --textColor-light-grayColor: #000000;
  --color-dark-grayColor: #90A4AE;
  --textColor-dark-grayColor: #000000;
  --color-secondaryColor: #FFD54F;
  --textColor-secondaryColor: #000000;
  --color-light-secondaryColor: #FFECB3;
  --textColor-light-secondaryColor: #000000;
  --color-dark-secondaryColor: #FFC107;
  --textColor-dark-secondaryColor: #000000;
  --color-redColor: #EF5350;
  --textColor-redColor: #000000;
  --color-light-redColor: #EF9A9A;
  --textColor-light-redColor: #000000;
  --color-dark-redColor: #E53935;
  --textColor-dark-redColor: #000000;
  --color-yellowColor: #FFEB3B;
  --textColor-yellowColor: #000000;
  --color-light-yellowColor: #FFF176;
  --textColor-light-yellowColor: #000000;
  --color-dark-yellowColor: #FBC02D;
  --textColor-dark-yellowColor: #000000;
  --color-greenColor: #43A047;
  --textColor-greenColor: #000000;
  --color-light-greenColor: #A5D6A7;
  --textColor-light-greenColor: #000000;
  --color-dark-greenColor: #2E7D32;
  --textColor-dark-greenColor: #ffffff;
  --color-headerColor: #CFD8DC;
  --textColor-headerColor: #000000;
  --color-light-headerColor: #ECEFF1;
  --textColor-light-headerColor: #000000;
  --color-dark-headerColor: #B0BEC5;
  --textColor-dark-headerColor: #000000;
  --color-body: #ffffff;
  --textColor-body: #000000;
  --color-light-body: #ffffff;
  --textColor-light-body: #000000;
  --color-dark-body: #ffffff;
  --textColor-dark-body: #000000;
  --color-focusOutlineColor: #D32F2F;
  --textColor-focusOutlineColor: #ffffff;
  --color-light-focusOutlineColor: #F44336;
  --textColor-light-focusOutlineColor: #000000;
  --color-dark-focusOutlineColor: #B71C1C;
  --textColor-dark-focusOutlineColor: #ffffff;
}

/********************Colors**************************/
.darkPrimaryColorCss{
    background: var(--color-dark-primaryColor);
    color: var(--textColor-dark-primaryColor);
}
.darkPrimaryTextColorCss{
    color: var(--textColor-dark-primaryColor);
}
.darkPrimaryLighterColorCss{
    background: var(--color-light-dark-primaryColor);
    color: var(--textColor-light-dark-primaryColor);
}
.primaryColorCss{
    background: var(--color-primaryColor);
    color: var(--textColor-primaryColor);
}
.primaryTextColorCss{
    color: var(--textColor-primaryColor);
}
.primaryLighterColorCss{
    background: var(--color-light-primaryColor);
    color: var(--textColor-light-primaryColor);
}
.bodyColorCss{
    background: var(--color-body);
    color: var(--textColor-body);
}
.bodyLighterColorCss{
    background: var(--color-light-body);
    color: var(--textColor-light-body);
}
.secondaryColorCss{
    background: var(--color-secondaryColor);
    color: var(--textColor-secondaryColor);
}
.grayColorCss{
    background: var(--color-grayColor);
    color: var(--textColor-grayColor);
}
.secondaryLighterColorCss{
    background: var(--color-light-secondaryColor);
    color: var(--textColor-light-secondaryColor);
}
.greenColorCss{
    background: var(--color-greenColor);
    color: var(--textColor-greenColor);
}
.greenLighterColorCss{
    background: var(--color-light-greenColor);
    color: var(--textColor-light-greenColor);
}
.redColorCss{
    background: var(--color-redColor);
    color: var(--textColor-redColor);
}
.redLighterColorCss{
    background: var(--color-light-redColor);
    color: var(--textColor-light-redColor);
}
.yellowColorCss{
    background: var(--color-yellowColor);
    color: var(--textColor-yellowColor);
}
.yellowLighterColorCss{
    background: var(--color-light-yellowColor);
    color: var(--textColor-light-yellowColor);
}
.headerColorCss{
    background: var(--color-headerColor);
    color: var(--textColor-headerColor);
}
.headerLighterColorCss{
    background: var(--color-light-headerColor);
    color: var(--textColor-light-headerColor);
}
.darkHeaderColorCss {
  background-color: var(--color-dark-headerColor);
  color: var(--textColor-dark-headerColor);
}
.focusOutlineColorCss{
    background: var(--color-focusOutlineColor);
    color: var(--textColor-focusOutlineColor);
}
.focusLighterOutlineColorCss{
    background: var(--color-light-focusOutlineColor);
    color: var(--textColor-light-focusOutlineColor);
}
.transparentColorCss{
  background-color: transparent;
  color: inherit;
}

/*****************IdeaColors********************/
.darkIdeaBackGroundCssClass{
  background-color:#2B2B2B;
  color:#E3E7EF;
}
.darkIdeaWhiteTextCssClass{
  color:#E3E7EF;
}
.darkIdeaGreenTextCssClass{
  color:#45807D;
}
.darkIdeaYellowTextCssClass{
  color:#B5B529;
}
.darkIdeaOrangeTextCssClass{
  color:#CC7832;
}
.darkIdeaBeigeTextCssClass{
  color:#FDC66B;
}
.darkIdeaLightBlueTextCssClass{
  color:#9CE1E8;
}
.darkIdeaRedTextCssClass{
  color:#CC2424;
}

body {
  font-family: helvetica;
  background: var(--color-body);
  color: var(--textColor-body);
  overflow-x: hidden;
}

.buttonEl {
  button {
    margin: 0;
    padding: 0.2em;
  }
  img,
  svg {
    vertical-align: middle;
    transition: all 200ms ease 0s;
    height: 1.2em;
  }
}

/********************************************************/
.top-row, .topRow {
  position: fixed;
  z-index: 500;
  width: 100%;
}

.hide-on-scroll, .hideOnScroll {
  z-index: 490;
}

.fullScreen {
  height: 100vh;
}

.textLineSize {
  height: 1em;
}

//HEADER
.filterArea {
  @extend .primaryColorCss;
  width: 100%;
  box-shadow: 0 0 0 1px var(--color-primaryColor);
}

//POPUP
.popupItem button {
  padding: 0;
  margin: 0;
  width: 100%;
}

.gridPopup {
  border-style: solid;
  border-width: 1px;
  border-color: black;
  background-color: white;
  z-index: 1;
}

//GRID
div.grid {
  border-collapse: collapse;
  --secondary-color: rgb(238, 238, 238);
  border-spacing: 0;
  --highlight-color: #f8f8cb;

  //TABLE
  > .tableHeadContainer {
    font-weight: bold;
    vertical-align: middle;
    overflow: visible;
    background-color: var(--color-secondaryColor);

    .clickableDiv:hover {
      opacity: 0.8;
      cursor: pointer;
    }
  }

  > .tableCellContainer {
    border-width: 0.5px;
    border-style: solid;
    padding: 0.1em 0.2em;
    vertical-align: middle;
    overflow: hidden;
    text-overflow: ellipsis;
    text-align: center;
    outline: red none 1px;
    outline-offset: -1px;
    vertical-align: middle;
    display: flex;
    align-items: center;

    &:hover {
      overflow: visible;

      .hoverExpander {
        background-color: var(--color-primaryColor);
        position: relative;
        z-index: 10;
      }
    }
  }

  //EXPANDER
  > .closedExpander {
    background-color: silver;
  }

  > .openedExpander {
    background-color: grey;
  }

  > div[data-expander="expanded"] {
    > img {
      transform: rotate(-180deg);
      transition: transform 0.25s linear;
    }

    > div > .expanderElement {
      transform: rotate(180deg);
    }
  }

  .expanderElementContainer {
    margin: 0.2em;
    align-self: center;
  }

  .expanderElement {
    display: block;
    height: 1em;
    cursor: pointer;
    align-self: center;
  }

  div[data-expander="collapsed"] {
    > img {
      transform: rotate(0deg);
      transition: transform 0.25s linear;
    }
  }

  > div[data-expander="passive"] {
    visibility: hidden;
    position: fixed;
  }

  .dragElement {
    height: 1.3em;
    width: 1.3em;
    display: block;
    margin: auto;
  }

  > .emptyCell {
    border: 0.5px solid var(--color-secondaryColor);
  }
}

.chipItem {
  font-size: 1em;
  text-align: center;
  border-radius: 0.28em;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  padding: 0.25em 0.55em;
  white-space: nowrap;
  align-self: center;
  user-select: none;
  line-height: 1em;
  margin: 0.2em;
  min-width: 0.5em;
  min-height: 1em;
  font-weight: normal !important;
}

//ICONS
.rowIconSize {
  height: 2em;
  width: 2em;
}

.filterButtonIcon {
  height: 1.3em;
  width: 1.3em;
}

.hideFilterIcon {
  height: 1.2em;
  width: 1.2em;
}

//COLORS
.headerColor-border {
  border-color: var(--color-secondaryColor);
}

.headerLighterColorCss{
  background: var(--color-light-headerColor);
  color: var(--textColor-light-headerColor);
}

.primaryColor {
  background-color: #e5d089;
  color: white;
}

.darkPrimaryColor {
  background-color: rgb(176, 162, 116);
  color: rgb(255, 255, 255);
}

.lightPrimaryColor {
  background-color: #af8f26;
}

.greenColor {
  background-color: rgb(5, 119, 49);
  color: rgb(255, 255, 255);
}

.greenColor-light {
  background-color: rgb(31, 246, 114);
  color: rgb(255, 255, 255);
}

.redColor {
  background-color: rgb(255, 0, 0);
  color: rgb(255, 255, 255);
}

.popupEl, .popup:not(.popup .popup) {
  border: 0.05em solid var(--color-headerColor) !important;
  box-shadow: 0 0 0.3125em var(--color-dark-headerColor);
  z-index: 10003;
  background-color: var(--color-body);
}

.rotate180deg {
  transform: rotate(-180deg);
}

/***********Input****************/

.uppercase{
  text-transform: uppercase;
}

.inputBox {
  display: flex;
  height: auto;
  line-height: 1;
  vertical-align: middle;
  width: 100%;
  background: var(--color-body);
  color: var(--textColor-body);
  box-sizing: border-box;
  position: relative;
  border: 0.05em solid var(--color-headerColor);

  &:hover {
    border-color: var(--color-dark-headerColor);
  }

  .inputSubBox {
    flex: 1 1 0%;
    height: auto;
    min-height: 100%;
    display: flex;
    position: relative;
    text-align: left;
  }

  input {
    margin: 0rem;
    vertical-align: top;
    border: medium none;
    height: 100%;
    padding: 0.2172em 0.3125em;
    width: 100%;
    z-index: 0;
    box-sizing: border-box;
    font-size: inherit;
    outline: currentcolor none medium;
    text-align: inherit;
    font-family: inherit;
    color: inherit;
    line-height: normal;
    background-color: inherit;
    flex: 1 1 20%;
    min-width: 0;
  }

.buttonEl {
  &:is(button), button {
      margin: 0;
      padding: 0.2em;
  }
  img, svg {
      vertical-align: middle;
      transition: all 200ms ease 0s;
      height: 1.2em;
  }
}

.inputBox {
  .btnCalendar {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16116 17000' width='100%25' height='100%25'%3E%3Cpath d='M1347 1671l1642 0 0 -1114c0,-307 250,-557 558,-557 307,0 557,250 557,557l0 1114 3397 0 0 -1114c0,-307 249,-557 557,-557 308,0 557,250 557,557l0 1114 3462 0 0 -1114c0,-307 250,-557 557,-557 308,0 557,250 557,557l0 1114 1578 0c369,0 706,152 951,397 244,242 396,579 396,950l0 12635c0,371 -152,708 -395,952 -244,243 -581,395 -952,395l-13422 0c-371,0 -708,-152 -952,-395 -243,-246 -395,-583 -395,-952l0 -12635c0,-368 151,-705 395,-949l2 -3c245,-244 582,-395 950,-395zm2757 1114l0 627c0,308 -250,557 -557,557 -308,0 -558,-249 -558,-557l0 -627 -1642 0c-65,0 -123,26 -164,67l-2 2c-41,41 -67,99 -67,164l0 12635c0,65 26,123 67,164l2 0c42,42 100,69 164,69l13422 0c64,0 122,-27 164,-69 42,-42 69,-100 69,-164l0 -12635c0,-63 -27,-122 -69,-164l0 -2c-41,-41 -99,-67 -164,-67l-1578 0 0 627c0,308 -249,557 -557,557 -307,0 -557,-249 -557,-557l0 -627 -3462 0 0 627c0,308 -249,557 -557,557 -308,0 -557,-249 -557,-557l0 -627 -3397 0z'/%3E%3Cpath d='M2711 4805l2159 0 0 2577 -2577 0 0 -2577 418 0zm1323 836l-905 0 0 905 905 0 0 -905z'/%3E%3Cpath d='M2711 8496l2159 0 0 2576 -2577 0 0 -2576 418 0zm1323 836l-905 0 0 905 905 0 0 -905z'/%3E%3Cpath d='M2711 12152l2159 0 0 2576 -2577 0 0 -2576 418 0zm1323 835l-905 0 0 906 905 0 0 -906z'/%3E%3Cpath d='M6889 4805l2159 0 0 2577 -2577 0 0 -2577 418 0zm1323 836l-905 0 0 905 905 0 0 -905z'/%3E%3Cpath d='M6889 8496l2159 0 0 2576 -2577 0 0 -2576 418 0zm1323 836l-905 0 0 905 905 0 0 -905z'/%3E%3Cpath d='M6889 12152l2159 0 0 2576 -2577 0 0 -2576 418 0zm1323 835l-905 0 0 906 905 0 0 -906z'/%3E%3Cpath d='M11311 4805l2159 0 0 2577 -2577 0 0 -2577 418 0zm1323 836l-905 0 0 905 905 0 0 -905z'/%3E%3Cpath d='M11311 8496l2159 0 0 2576 -2577 0 0 -2576 418 0zm1323 836l-905 0 0 905 905 0 0 -905z'/%3E%3Cpath d='M11311 12152l2159 0 0 2576 -2577 0 0 -2576 418 0zm1323 835l-905 0 0 906 905 0 0 -906z'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    transition: all 200ms ease;
  }

  .dpCalendar {
    max-width: 19.5em;
    text-align: center;
    border: 1px solid gray;
    padding: 0.1em;
    z-index: 1;
  
    .dpCalendarHeader {
      display: flex;
      justify-content: space-between;
      align-items: center;
      height: 2.2em;
      font-size: 1.05em;
  
      >button {
        background: no-repeat center url(.\datepicker\arrow-down.svg);
        transform: rotate(90deg);
        background-size: 55% 55%;
  
        &.dpArrowRight {
          transform: rotate(-90deg);
        }
  
        &:hover {
          background-color: lightgray;
        }
      }
  
      .dpCalendarMonthYear {
        display: flex;
  
        .dpCalendarMonth {
          margin: 0 0.7em 0 0;
  
          button {
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 6.5em;
            min-height: auto;
            margin: 0;
            padding: 0.4em 0.2em 0.4em 0.4em;
      
            &::after {
              display: block;
              content: "";
              width: 0.7em;
              height: 0.7em;
              background: no-repeat center url(.\datepicker\arrow-down.svg);
              background-size: 100% 100%;
              transition: all 0.15s ease;
            }

            &.rotateArrow::after {
              transform: rotate(-180deg);
            }
  
            &:hover {
              background: #f3f3f3;
              color: initial;
            }
          }
          
          .popupEl {
            text-align: start;
      
            & span {
              display: block;
              cursor: default;
              padding: 0.12em 1em 0.12em 0.4em;
              font-weight: normal;
      
              &:hover {
                background: lightgray;
              }
            }
          }
        }

        .dpCalendarYears {
          display: flex;
          padding-left: 0.3em;
          
          span {
            align-self: center;
            margin-right: 0.5em;
          }
  
          & .dpArrowBtnsCont {
            border: 1px solid lightgray;
          }
        }
      }
    }
  
    .dpArrowBtnsCont {
  
      button {
        display: block;
        margin: 0;
        padding: 0 6px;
        min-width: 0.5em;
        min-height: 0.5em;
        background: no-repeat center url(.\datepicker\sort-desc.svg);
        background-size: 0.5em 0.5em;
        height: 50%;
  
        &:hover {
          background-color: lightgray;
        }
  
        &.dpArrowBtnUp {
          transform: rotate(180deg);
          border-top: 1px solid gray;
        }
      }
    }
  
    .dpCalendarContainer {
      display: flex;
      flex-wrap: wrap;
      padding-bottom: 0.5em;
  
      span {
        padding: 0.3em 0;
        margin: 0.1em;
      }
  
      .dpCalendarWeekDays {
        display: flex;
        width: 100%;
        margin: 0 0 0 12.5%;
        font-size: 0.8em;
        color: darkblue;
  
        span {
          flex: 1;
        }
      }
  
      .dpCalendarWeekNums {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        border-right: 1px solid darkblue;
        color: darkblue;
        font-size: 0.9em;
      }
  
      .dpCalendarDays {
        flex: 7;
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        justify-items: center;
  
        span {
          width: 100%;
  
          &.current {
            color: white;
            background-color: blue;
          }
  
          &.today {
            border: 1px solid blue;
          }
  
          &:hover {
            cursor: pointer;
            background: lightgray;
          }
        }
  
        .dayNextMonth, .dayPrevMonth {
          color: gray;
        }
      }
    }
  
    .dpTimeContainer {
      display: flex;
      width: 100%;    
      border-top: 1px solid lightgray;
      height: 2.1em;
  
      > .dpTimeSection {
        flex-grow: 1;
        display: flex;
  
        > span {
          flex-grow: 1;
          align-self: center;
        }
  
        .dpArrowBtnsCont {
          border-left: 1px solid gray;
          border-right: 1px solid transparent;
        }
  
        &:first-child .dpArrowBtnsCont {
          border-right: 1px solid gray;
        }
      }
  
      .dpTimeSeparator {
        align-self: center;
        margin: 0 0.4em;
        font-weight: bold;
      }    
    }
  
    .dpCtrlBtnsCont {
      display: flex;
      justify-content: space-around;
      width: 100%;
      border-top: 1px solid lightgray;
      padding: 0.3em 0;
  
      button {
        border: 1px solid lightgray;
        width: 38%;
        min-width: min-content;
        padding: 0;
  
        &:hover {
          color: white;
  
          &.dpBtnNow {
            background: blue;
          }
  
          &.dpBtnClose {
            background: red;
          }
        }
      }
    }
  }
}

.roInputBox{
  @extend .inputBox;
  color: inherit;
  background: none;
}

// Dropdown with custom content
.customDropdownBox {
  box-sizing: border-box;
  display: flex;
  background: var(--color-body);
  color: var(--textColor-body);
  border: 0.05em solid var(--color-headerColor);

  &:hover {
    border-color: var(--color-dark-headerColor);
  }

  .customContentBox,
  input {
    flex-grow: 1;
    padding: 0.2172em 0.3125em;
  }

  .customContentBox {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    overflow-wrap: anywhere;
    cursor: pointer;

    span {
      margin: 0 0.2em 0 0;

      &:not(.chipItem) {
        padding: 0.25em 0;
      }
    }
  }

  &.customDropdownRo {
    .customContentBox,
    span {
      cursor: default;
    }
  }

  input {
    font-size: inherit;
    font-family: inherit;
    background-color: inherit;
    min-width: 0;
    border: none;
  }

  button.buttonEl {
    align-self: flex-start;
  }

  .dropdownPopup {
    max-height: 10em;
    overflow: auto;
  }
}

.popupEl {
  border: 0.05em solid var(--color-headerColor);
  z-index: 10003;
  background: var(--color-body);
  // Color Picker

  .inputBox {
    &.colorPickerRo {
      border: none;

      input {
        margin: 0;
        height: 100%;
        cursor: default;
      }
    }

    input.colorPickerChip {
      color: transparent !important;
      border-radius: 0.28em;
      margin: 0 0.2em;
      height: 78%;
      align-self: center;
      cursor: pointer;
      background: repeating-linear-gradient(45deg, lightgray 0 8%, white 8% 16%);
      box-shadow: 0px 0px 0px 1px var(--color-headerColor);
      transition: background 0.2s ease-out;
    }

    > .colorPickerPopup {
      z-index: 501; // to overcome .filterArea z-index
      border: 1px solid var(--textColor-primaryColor);

      .react-colorful__saturation-pointer {
        width: 8px;
        height: 8px;
        border-radius: 2px;
      }

      .react-colorful__hue-pointer {
        width: 14px;
        border-radius: 0px;
      }

      .react-colorful__saturation {
        border-radius: 0px;
      }

      .react-colorful__last-control {
        border-radius: 0px;
      }
    }
  }
}

/************** RouteElement **************/
.routeElement {
  display: flex;
  min-height: 1em;
  max-height: 100%;
  max-width: 100%;
  background-color: var(--color-grayColor);
  color: var(--textColor-grayColor);
  min-width: min-content;
  white-space: nowrap;
  border-radius: 0.28em;

  > div {
      display: flex;
      flex-grow: 1;
      justify-content: center;
      align-items: center;
      overflow: hidden;
      padding: 0.25em 0;
      border-right: 1px solid var(--color-dark-grayColor);

      &:first-child {
        padding-left: 0.55em;
        border-top-left-radius: 0.28em;
        border-bottom-left-radius: 0.28em;
      }

      &:last-child {
        padding-right: 0.55em;
        border-radius: 0 0.28em 0.28em 0;
        border-right: none;
      }

      &.routePartDone {
          @extend .darkPrimaryColorCss;
      }
  }

  &:not(.compact) > div {
      padding: 0.25em 0.55em;
      border-top-right-radius: 0.28em;
      border-bottom-right-radius: 0.28em;

      &.routePartDone:not(.isLastDone) {
          box-shadow: 0.3em 0 0 0 var(--color-dark-primaryColor);  
      }
  }
}

/***********************Menu**************************/
.menuItem {
  display: flex;
  align-items: center;
  min-height: 2.4em;
  white-space: nowrap;
  outline: none !important;
  cursor: pointer;

  &.isCurrent {
      @extend .primaryColorCss;
  }

  &:hover, &:focus-within {
      @extend .primaryLighterColorCss;
  }

  &.executeAnim {
      animation: executeAnimation 0.4s ease-out infinite alternate;

      @keyframes executeAnimation {
          0% { opacity: 1 }
          100% { opacity: 0.5 }
      }
  }

  .menuItemIcon {
      width: 2em;
      height: 2em;
  }

  .menuFolderIcon {
      transition: transform 0.15s ease 0s;
      height: 1em;
      margin-right: 0.5em;
  }

  %menu-item-name {
      flex-grow: 1;
      text-overflow: ellipsis;
      overflow: hidden;
  }

  > span {
      @extend %menu-item-name;
      padding: 0 0.5em;
  }

  > .withBindProvider > span {
      @extend %menu-item-name;
      padding: 0 0.5em 0 0;
  }

  > .menuItemIcon,
  > .withBindProvider > .menuItemIcon {
      margin-left: 0.5em;
  }

  > .shortButton {
      margin-right: -0.2em;
  }

  .withBindProvider {
      min-height: inherit;
      height: 100%;
      width: 100%;
  }
}

.mainMenuBar {
  @extend .primaryColorCss;
  box-sizing: border-box;
  position: fixed !important;
  height: 2.7em !important;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 20000;
  border-bottom: 0.15em solid var(--color-dark-primaryColor);

  > div {
      display: flex;
      height: 100%;
  }

  .menuCustomItem  {
      display: flex;
      align-items: center;
      min-height: 2.4em;
      margin-right: 0.5em;
      cursor: default;
      white-space: nowrap;

      &.focusWrapper {
          outline-offset: 0;
      }

      .btnManualUpd {
          color: var(--color-redColor);
      }

      > .shoppingBasket > button {
          padding: 0;
          background-color: inherit;
          line-height: normal;
          color: inherit;
          height: 1.6em;
      }
  }

  .menuLogo > img {
      max-width: 18em;
      max-height: 100%;
      min-height: 2em;
  }

  .menuPopupBox {
      @extend .bodyColorCss;
      min-width: 13.5em !important;

      &.hasIcons {
          > .menuItem > span:first-child,
          > .menuItem > .shortButton + span,
          > .menuItem > .withBindProvider > .shortButton + span,
          > .menuCustomItem {
              margin-left: 2.5em;
          }
      }

      .menuFolderIcon {
          transform: rotate(-90deg);
          margin-right: 0.1em;
      }

      .menuFolderOpened {
          > .withBindProvider > .menuFolderIcon,
          > .menuFolderIcon {
              transform: rotate(-270deg);
          }
      }

      .menuItem:first-child > .menuPopupBox {
          margin-top: -1px;
      }

      .menuCustomItem {
          padding: 0 0.5em;
      }

      hr {
          background-color: var(--color-dark-primaryColor);
          height: 0.06em;
          margin: 0 0.3em;
          border: none;
      }

      hr + hr,
      hr:first-child,
      hr:last-child {
          display: none;
      }
  }

  // top level menu items
  .leftMenuBox,
  .rightMenuBox {
      > .menuItem {
          &.menuFolderOpened > .menuFolderIcon {
              transform: rotate(-180deg);
          }

          .menuPopupBox {
              margin-top: 0.07em;
          }
      }

      > .menuItem,
      > .menuPopupBox > .menuItem {
          max-width: 20em;

          &.isCurrent:not(:hover):not(:focus-within) {
              @extend .darkPrimaryColorCss;
          }
      }

      &.hiddenIcons > .menuItem > .menuItemIcon:first-child {
          display: none;
      }
  }

  .rightMenuBox {
      .chipItem {
          min-width: 1.9em;
      }

      .dateTimeClock > .dateDisplay {
          padding-right: 0.3em;
      }

      &:not(.rightMenuCompressed) .shortName {
          display: none;
      }

      &.rightMenuCompressed {
          .longName,
          .dateTimeClock > .dateDisplay {
              display: none;
          }
      }
  }

  .menuBurgerBox {
      display: flex;

      &:focus-within {
          @extend .primaryLighterColorCss;
          outline: none;
      }

      > .menuPopupBox {
          @extend .primaryColorCss;
          border: none !important;
          box-shadow: none !important;
          margin-top: 0.1em;
      }
  }

  .btnBurger {
      > svg {
          width: 1.5em;
          stroke: var(--textColor-primaryColor);

          > line {
              transition: transform 100ms;
              transform-origin: center;
          }
      }
  }
}

/***********************Virtual Keyboard**************************/
.vkKeyboard {
  max-width: 100%;
  background-color: var(--color-body);
  border: 1px solid var(--textColor-body);

  font-size: 0.35em;

  .vkElement {
    margin: 0;
    padding: 0;
    overflow: hidden;
    border: 1px solid var(--textColor-body);
  }
}

/*********************ClickableDiv*******************/
.clickableDiv{
    cursor: pointer;
    > span {
        vertical-align: middle;
    }
    img, svg{
        vertical-align: middle;
    }
    &:hover{
        opacity: 0.8;
    }
}

/***********************TCS-Dashboard**************************/
.dashboardHeader {
  $strapWidth: 2em;

  position: relative;
	text-align: center;
  padding-left: $strapWidth;
  margin: 2em 0;
  padding: 0.5em 2em 0.5em 4em;
  background: #F4F4F4;
  color: black;

  &::before {
		content: '';
    position: absolute;
    width: $strapWidth;
    height: 100%;
    left: 0;
    top: 0;
    background-color: var(--color-primaryColor);
	 }
  
  > h1 {
    font-size: 2em;
    font-weight: bold;
  }
}

.dashboardCard {
	display: flex;
	min-height: 13em;
	max-width: 25em;
	background-color: var(--color-light-headerColor);

	.cardMainPart {
		flex-grow: 1;
		padding: 1em;

		> div {
			display: flex;
		}

		.cardIconField {
			width: 6em;
			height: 6em;
			margin: 0 1em 1em 0;

			img {
				height: 6em;
			}
		}

		.cardNameField {
			font-size: 1.2em;
			font-weight: 600;
			flex-grow: 1;
		}

		.cardInnerItems {
			flex-wrap: wrap;
		}
	}

	.cardRightButton {
		min-width: 1em;
		font-weight: 600;
		font-size: 2em;
		text-align: center;

		> * {
			display: flex;
			align-items: center;
			justify-content: center;
			height: 100%;
		}
	}
}

.flexibleRow {
  display: flex;
  flex-flow: row wrap;
  flex-grow: 1;
  overflow: clip;
}

/*********************** RichTextElement **************************/
.richTextElement {
  white-space: pre;
  overflow-x: auto;
  margin: 1em 0;
  padding: 0.5em;
}

// ScannerSerialElement
.btnConnectScanner {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100000;

  &:hover {
    opacity: 1 !important;
  }

  img {
    width: 2em;
  }
}

/*********************** FlagElement **************************/
.flagElement {
  position: relative;

  .flagButton {
    width: 100%;
    padding: 0;
    margin: 0;
  }
  
  .flagName {
    text-align: center;
    margin-top: 0.2em;
  }
}

/*********************** Second window **************************/
#new-window-container {
  display: flex;
}

/**** ScrollBar ****/

/* width */
::-webkit-scrollbar {
  width: 0.5em;
}

/* Track */
::-webkit-scrollbar-track {
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: var(--color-primaryColor);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: var(--color-dark-primaryColor);
}

/*********************** FullCalendar **************************/
.fc {
  --fc-button-text-color: var(--textColor-light-headerColor);
  --fc-button-bg-color: var(--color-light-headerColor);
  --fc-button-active-bg-color: var(--color-dark-headerColor);
  --fc-button-border-color: var(--color-dark-headerColor);
  --fc-button-hover-bg-color: var(--color-light-headerColor);
  --fc-page-bg-color: var(--color-body);
  --fc-border-color: var(--color-dark-headerColor);
  --fc-non-business-color: var(--color-headerColor);
  --fc-event-bg-color: var(--color-light-primaryColor);
  --fc-event-border-color: transparent;
  --fc-event-text-color: var(--textColor-primaryColor);
  --fc-now-indicator-color: var(--color-redColor);

  .fc-button {
    border: none !important;
    box-shadow: none !important;
    border-radius: 0;
    padding: 0.25em 0.55em;

    &:hover {
      opacity: 0.8;
    }

    &:disabled {
      cursor: default;
    }
  }

  .fc-today-button, .fc-prev-button, .fc-next-button  {
    &, &:hover, &:active, &:disabled, :not(:disabled):active {
      background-color: var(--color-body) !important;
      color: var(--textColor-body) !important;
    }
  }

  .fc-button-group {
    @extend .darkHeaderColorCss;
    padding: 0.15em;
    border-radius: 0.28em;

    .fc-button {
      border-right: 1px solid var(--color-dark-headerColor) !important;
      margin: 0 !important;

      &:first-child {
        border-top-left-radius: 0.28em;
        border-bottom-left-radius: 0.28em;
      }

      &:last-child {
          border-top-right-radius: 0.28em;
          border-bottom-right-radius: 0.28em;
      }
    }
  }

  .fc-event:hover {
    opacity: 0.8;
  }

  .fc-non-business {
    opacity: 0.3;
  }

  .overlayMain {
    position: absolute !important;
    width: 100% !important;
    height: 100% !important;
  }
}

/************** Image Viewer **************/
@import "yet-another-react-lightbox/styles.css";
@import "yet-another-react-lightbox/plugins/captions.css";
@import "yet-another-react-lightbox/plugins/counter.css";
@import "yet-another-react-lightbox/plugins/thumbnails.css";

.yarl__root {
    --yarl__portal_zindex: 50000;
    --yarl__counter_top: auto;
    --yarl__counter_bottom: 0;
    --yarl__counter_filter: none;
    --yarl__counter_padding: 0;
    --yarl__container_background_color: var(--color-body);
    --yarl__thumbnails_container_background_color: var(--color-body);
    --yarl__thumbnails_thumbnail_background: var(--color-body);
    --yarl__thumbnails_thumbnail_padding: 0;
    --yarl__thumbnails_thumbnail_border_color: var(--color-dark-headerColor);
    --yarl__thumbnails_thumbnail_active_border_color: var(--color-primaryColor);
    --yarl__color_button: var(--textColor-body);
    --yarl__color_button_disabled: var(--textColor-body);
    --yarl__color_button_active: var(--textColor-body);
    --yarl__slide_captions_container_background: var( --color-headerColor);
    --yarl__slide_title_color: var(--textColor-body);
    --yarl__button_filter: none;
    --yarl__thumbnails_thumbnail_border_radius: 0;

    .yarl__button:disabled {
        display: none;
    }

    .yarl__thumbnails_thumbnail_active {
        border-width: 0.15em;
    }

    .thumbnailImage {
        max-width: min(1280px, 100%);
        max-height: min(720px, 100%);
    }

    .thumbnailTitle {
        position: absolute;
        bottom: 0;
        left: 0;
        text-overflow: ellipsis;
        background: inherit;
        overflow: hidden;
        width: 100%;
        font-size: 0.9em;
        direction: rtl;
        box-sizing: border-box;
        padding: 0.1em 0.1em 0 0;
    }
}

.inlineImageViewer {
    --yarl__button_padding: 4px;
    --yarl__navigation_button_padding: 4px;
    --yarl__slide_captions_container_padding: 10px;
    --yarl__slide_title_font_size: 1em;
    --yarl__toolbar_padding: 0 0.2em;
    --yarl__thumbnails_container_padding: 0.4em 0 0;

    width: 100%;
    max-height: 80vh;
    aspect-ratio: 3 / 2;
    margin: 0.2em 0;
    flex-grow: 1;

    @media (orientation: portrait) {
        aspect-ratio: 2 / 3;
    }

    .yarl__container {
        border: 1px solid var(--color-dark-headerColor);
    }

    .yarl__slide {
        padding: 2.5em 0 0;
    }

    button {
        margin: 0;
    }

    .yarl__navigation_next, .yarl__navigation_prev {
        background: rgb(0 0 0 / 0.2);
        color: white !important;
    }

    &:is(.groupBox > *) {
        width: min(90vw, 750px);
    }
}

/**********************Button*************************/
button {
  min-height: 1.6em;
  min-width: 1.6em;
  color: var(--textColor-body);
  background-color: transparent;
  cursor: pointer;
  margin: 0.2em;
  border: medium none;
  font-size: 1em;
  font-family: inherit;
  line-height: 1;
  align-self: center;
  padding: 0 0.2em;
  white-space: nowrap;
  outline: currentcolor none medium;
  outline-offset: -0.1em;

  &.noAction {
      color: var(--color-dark-grayColor);
      background: var(--color-grayColor);
      cursor: initial;
  }

  &:not(.noAction):hover {
      opacity: 0.8;
  }

  > .text {
      padding: 0 1em;
  }

  > svg, img {
      + .text {
          vertical-align: text-top;
      }
  }
}

/************LabeledElement****************/
.labeledElement {
  &:not(:is(.labeledElement *)) {
      margin: 0.2em;
  }
  &.accented {
      background: var(--color-light-primaryColor);
      box-shadow: 0 0 0 0.3em var(--color-light-primaryColor);
  }
  .labelBox, .contentBox, &.contentBox {
      display: flex;
      align-items: center;
      gap: 0.2em;

      > button {
          margin: 0;
      }
  }
  .labelBox {
      min-height: 1em;

      label {
          font-size: 0.8em;
          white-space: nowrap;
          cursor: inherit;
      }
  }
  &.contentBox > .labelBox > label {
      font-size: 1em;
  }
}

/************** FilterButtonExpander & MassOps **************/
.filterButtonExpander, .massOp {
  height: 2em;
  display: inline-flex;
  align-items: center;
  padding: 0 1em;
  gap: 0.5em;
  vertical-align: middle;

  > .nameFolded {
    display: none;
  }

  + .umButton {
    top: -0.5em !important;
  }
}

.filteringInput {
  width: auto;
  margin: 0.3em;
  align-items: center;
  height: 2em;

  .searchIcon {
      height: 100%;
      box-sizing: border-box;
      padding: 0.2em 0.1em 0.2em 0.2em;
      order: -1;
      color: var(--color-dark-grayColor);
  }
}

.popupEl > .massOpBox {
  margin: 0;

  > .massOp {
    @extend .menuItem;
    @extend .transparentColorCss;
    position: relative;
    opacity: 1;
    padding: 0 1.5em 0 0.5em;
    margin: 0;
    width: 100%;
    height: 100%;
    text-align: left;

    &.focusWrapper {
        outline: none;
    }

    &.isFolder {
        &::after {
            content: "";
            height: 1em;
            width: 1em;
            position: absolute;
            right: 0.1em;
            background: no-repeat center url(./filter-massops/arrow-down.svg);
            background-size: 100% 100%;
            transform: rotate(-90deg);
            transition: all 0.15s ease;
            pointer-events: none;
        }
        &.isOpened::after {
            transform: rotate(-270deg);
        }
    }

    > span {
      padding: 0;
    }

    > .nameFolded {
      display: block;
    }

    > .nameFull {
      display: none;
    }

    .folderPath {
      color: var(--color-dark-headerColor);
      font-size: 0.9em;
      margin-left: auto;
      margin-right: -0.5em;
      flex-grow: 0;
    }
  }
}

/************** Masonry layout **************/
@import "react-grid-layout/css/styles.css";
@import "react-resizable/css/styles.css";

.groupBox {
  border: 1px dashed var(--color-dark-headerColor);
  margin: 0.4em;
  position: relative;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(24em, 1fr));
  align-items: start;
  align-content: start;
  padding: 0.5em 0.5em;
  gap: 0 1em;

  @media (min-width: 1600px) {
    grid-template-columns: repeat(auto-fill, minmax(28em, 1fr));
  }

  .groupCaption {
      color: #727272;
      line-height: 1;
      white-space: nowrap;
      font-size: 0.875em;
  }

  .labeledElement {
    display: flex;
    align-items: center;
    margin: 0.2em 0;
    flex: 1 1 0;

    .labelBox {
      width: 12em;
      min-width: 12em;
      color: #44474e;
      padding-right: 0.2em;

      @media (min-width: 1600px) {
        width: 15em;
        min-width: 15em;
      }

      > label {
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }

    .contentBox {
      min-width: 12em;
    }
  }

  > .flexibleRow {
    flex-direction: column;
    margin-bottom: 0.5em;
    flex: 1 1 0;
  }
}

.react-grid-item {
  &:not(.isDragging .react-grid-item) {
    transition-property: none !important;
  }

  > * {
    margin: 0;
    height: 100%;
    min-height: min-content;
  }

  hr {
    position: absolute;
    width: 100%;
    background-color: red;
    top: 4em;
    }
}

.editMode .react-grid-item {
  cursor: move;
}

/***********************Timepicker**************************/

.timepickerPopupBox {
  display: flex;

  .timeSlider {
    max-height: 100%;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;

    &::-webkit-scrollbar {
      display: none;
    }

    > div {
      display: flex;
      justify-content: center;
      align-items: center;
      scroll-snap-align: start;
    }
  }
}